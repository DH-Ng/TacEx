from dataclasses import MISSING, dataclass
from typing import Any, Dict, List, Sequence, Tuple, Union

from isaaclab.sensors import FrameTransformerCfg, SensorBaseCfg, TiledCameraCfg
from isaaclab.utils import class_to_dict, configclass, to_camel_case
from tacex_assets import TACEX_ASSETS_DATA_DIR

from tacex import GelSightSensor, GelSightSensorCfg
from tacex.simulation_approaches.fots import FOTSMarkerSimulatorCfg
from tacex.simulation_approaches.gpu_taxim import TaximSimulator, TaximSimulatorCfg

"""Configuration for the gelsight mini sensor."""
@configclass
class GelSightMiniCfg(GelSightSensorCfg):
    class_type: type = GelSightSensor

    case_dimensions: GelSightSensorCfg.Dimensions = GelSightSensorCfg.Dimensions(
        width=32/1000,
        length=28/1000,
        height=24/1000
    )

    gelpad_dimensions: GelSightSensorCfg.Dimensions = GelSightSensorCfg.Dimensions(
        width=20.75/1000,
        length=25.25/1000,
        height=4.5/1000
    )

    sensor_camera_cfg: GelSightSensorCfg.SensorCameraCfg = GelSightSensorCfg.SensorCameraCfg(
        prim_path_appendix = "/Camera",
        update_period= 0,
        resolution = (320, 240),
        data_types = ["depth"],
        clipping_range = (0.024, 0.029),
    )

    update_period: float = 0.0

    data_types: list[str] = ["tactile_rgb", "marker_motion", "height_map", "camera_depth", "camera_rgb"]
    """Output of the GelSight Sensor

    - height_map: Generated by the sensor camera. Shape = the camera resolution specified in the SensorCameraCfg.
    - tactile_rgb: Tactile RGB image. Shape = tactile_img_resolution specified in the OpticalSimulator class.
    - marker_motion: Intial and current positions of the gelpad markers.
        Shape (num_envs, 2, num_markers_markers, 2)
        - dim = 1: initial, current markers
        - dim = 2: marker pos (x,y) in the image (x = width, y = height)
    - camera_depth: depth image from the sensor camera
    - camera_rgb: rgb image from the sensor camera
    """

    optical_sim_cfg = TaximSimulatorCfg(
        calib_folder_path= f"{TACEX_ASSETS_DATA_DIR}/Sensors/GelSight_Mini/calibs/640x480",
        gelpad_height= gelpad_dimensions.height,
        gelpad_to_camera_min_distance= 0.024,
        with_shadow=False,
        tactile_img_res=(320,240),
        device = "cuda",
    )

    marker_motion_sim_cfg = FOTSMarkerSimulatorCfg(
        lamb = [0.00125,0.00021,0.00038],
        pyramid_kernel_size = [51, 21, 11, 5], #[11, 11, 11, 11, 11, 5],
        kernel_size = 5,
        marker_params = FOTSMarkerSimulatorCfg.MarkerParams(
            num_markers_col=11,
            num_markers_row=9,
            x0=15,
            y0=26,
            dx=26,
            dy=29,
        ),
        tactile_img_res=(320,240),
        device = "cuda",
        frame_transformer_cfg = MISSING
    )
    compute_indentation_depth_class = "optical_sim"

    device: str = "cuda" # use gpu per default #TODO currently gpu mandatory, also enable cpu only usage?
